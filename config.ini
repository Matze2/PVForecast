# Usage note: replace values <xx> with legal values (NOT repeating the angle-brackets <>)
# outcommented keys contain default values

[DEFAULT]
    # ----------------------------------------------------- Storage locations
    storeCSV          = 0                                   # store .csv rendering of .kml file and pv sim results
    storePath         = ./temp/                             # storage location for files (.csv, .kml, ..._ and SQLite database)
    storeDB           = 1                                   # store to SQLite database (see [DBRepo] for name)
                                                            #    this could optionally be different in sections [SolCast], [DWD], [OpenWeatherMap] and [PVSystem]
    storeInflux       = 1                                   # store DC power output estimates in Influx (see [Influx] for name)
                                                            #    this could optionally be different in sections [SolCast], [DWD], [OpenWeatherMap]

    # ----------------------------------------------------- Location of solar system
    Latitude          = <latitude_of_your_system>
    Longitude         = <longitude_of_your_system>
    Altitude          = 0                                   # altitude of system (above sea level)
    
[Forecasts]                                                 # enable / disable certain forecasts
    MOSMIX_L          = 0                                   # single station file, updated every 6h
    MOSMIX_S          = 0                                   # all stations,        updated hourly   -- ~37MByte/hour download
    Solcast           = 0                                   # note the extra enable safety flag in section 'Solcast'
    OWM               = 1

[SolCast]
    # register free rooftop site at https://solcast.com/pricing/
    resource_id       = <resource_id_from_solcast.com>
    api_key           = <api_id_from_solcast.com>
    post              = 1                                   # enable posting; uploaded data can be found here: https://api.solcast.com.au/rooftop_sites/<recource_id>/measurements
    # force           = 0                                   # forces a download on every call!!! note limitations in number of downloads/day
    # interval        = 60                                  # interval at which SolCast is read (during daylight only)
 
[DWD]           
    # Use : https://wettwarn.de/mosmix/mosmix.html to find closest station to you
    # the following resolves to: https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/K1176/kml/
    DWD_URL_L         = https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_L/single_stations/
    DWD_URL_S         = https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_S/all_stations/kml/
    DWDStation        = <station_number>                    # Station number, select from https://wettwarn.de/mosmix/mosmix.html

    Irradiance        = all                                 # irrandiance model (for MOSMIX) - one of below, or comma separated list of below
                                                            # 'all'                                    all below
                                                            # 'disc', 'dirint', 'dirindex', 'erbs'     GHI decomposition models - needs a station which supports Rad1h
                                                            # 'erbs_kt'                                as 'erbs', but with kt as input parameter: this needs 
                                                            #                                              - a minor modification to pvlib.irradiance.erbs()
                                                            #                                              - PVSystem.allow_erbs_kt = 1
                                                            #                                              - a station which supports RRad1
                                                            # 'campbell_norman', 'clearsky_scaling'    cloud coverage to irradiance
                                                            # 'clearsky'                               clear sky model

    storeKMZ          = 0                                   # store downloaded .kmz files (.kml compressed as .zip)
    # keepKMZ_S       = 0                                   # keep MOSMIX_S original file after downloading 
    
[OpenWeatherMap]
    # register free API acces at https://openweathermap.org/price
    api_key           = <api_id_from_openweathermap.org>
    Irradiance        = all                                 # irrandiance model (for OWM) - one of below, or comma separated list of below
                                                            # 'all'                                    all below
                                                            # 'campbell_norman', 'clearsky_scaling'    cloud coverage to irradiance
                                                            # 'clearsky'                               clear sky model
                                                            
[PVSystem]                                                  # PV system to be modeled (for DWD, OpenWeatherMap based forecasts)
    # Model            = CEC                                # modeling strategy for PV: 'CEC' or 'PVWatts' 
    # TemperatureModel = open_rack_glass_glass              # https://pvlib-python.readthedocs.io/en/stable/generated/pvlib.temperature.sapm_cell.html
    # clearsky_model   = simplified_solis                   # model in pvlib.location.get_clearsky (note: 'haurwitz' not supported)
    # allow_erbs_kt    = 1                                  # needs minor modification to pv.irradiance.erbs() if enabled
    
    # ----------------------------------------------------- physical definition of PV System, using CEC database
    # based on .csv files at ~/.local/lib/python3.8/site-packages/pvlib/data, special characters to be replaced by '_'
    ModuleName        = LG_Electronics_Inc__LG325N1W_V5     # select your panel (or same Wp as yours, eg. 325Wp)
    InverterName      = SMA_America__SB10000TL_US__240V_    # select an inverter comparable name plate power (eg. 10kW)
    NumStrings        =   2                                 # number of strings 
    NumPanels         =  15                                 # number of panels per string
    
    # ----------------------------------------------------- PVWatts definition
    InverterPower     = 10000                               # name-plate inverter max. power
    NominalEfficiency = 0.965                               # nominal European inverter efficiency
    SystemPower       =  9750                               # system power [Wp]
    TemperatureCoeff  = -0.0036                             # temperature coefficient (efficiency loss per 1C)
   
    # ----------------------------------------------------- orientation of solar panels
    # location (Latitude, Longitude) defined in [DEFAULT] section above
    Tilt              =  30
    Azimuth           = 127                                 # 270=West, 180=South, 90=East
    
[DBRepo]
    dbName            = pvforecasts.db                      # SQLite database name (at 'storePath')
                                                            # database tables are created on-the-fly as needed (but not altered if more/less fields appear:
                                                            #    - new, additional fields after inital table creation) are supporessed with a warning
                                                            #    - missing fields are left empty)
                                                            # table names:     dwd          all weather fields from MOSMIX_L
                                                            #                  dwd_s        all weather fields from MOSMIX_S
                                                            #                  pvsystem     PV modeling output from MOSMIX_L data
                                                            #                  pvsystem_s   PV modeling output from MOSMIX_S data
                                                            #                  owm          OpenWeatherMap weather fields and PV modeling output
                                                            #                  solcast      Solcast estimates
                                                            # older (long-range) forecasts are kept in database. Differentiation is by field IssueTime
                                                            # Depending on how many forecasts are downloaded and calculated, this database can grow at
                                                            # up to 120MByte/month
    
[Influx]
    host              = <your_hostname>                     # can be localhost
    database          = <your_influx_db_name>               # measurements generated:    owm           DC power estimates from OpenWeatherMap data
                                                            #                            pvsystem      DC power estimates from DWD MOSMIX_L
                                                            #                            pvsystem_s    DC power estimates from DWD MOSMIX_S
                                                            #                            solcast       power estimates from solcast
                                                            #                            forecast_log  log on which downloads were made
                                                            # older (long-range) forecasts are overwritten with newer (short-range) forecasts as they become available
    power_field       = PV.Gesamtleistung                   # purpose:    get generated power for posting to solcast
                                                            # format:     <measurement>.<field>
                                                            # assumption: data has a time resolution of 5min or less
                                                            #             data available in same influx database as forecast gets stored
    